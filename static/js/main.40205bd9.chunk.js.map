{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/pages/404.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/comicsBanner/comicsBanner.js","services/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/CharacterPage/CharacterInfo.js","components/findCharacter/FindCharacter.js","components/pages/MainPage.js","components/pages/SingleComic.js","components/pages/CharacterPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","ErrorMessage","display","width","height","objectFit","margin","src","img","alt","Page404","ComicsBanner","Avengers","AvengersLogo","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterByName","name","getAllComics","_transformComics","getComics","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","CSSTransition","timeout","classNames","TransitionGroup","component","renderItems","errorMessage","spinner","disabled","ComicsPage","Helmet","content","View","desciption","imgStyle","href","RandomChar","setChar","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","onClick","mjolnir","CharList","props","charList","setCharList","setNewItemLoading","charEnded","setCharEnded","onCharListLoaded","newCharList","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","ref","elem","onCharSelected","onKeyPress","e","key","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","character","CharacterInfo","useParams","setCharacter","updateCharacter","onCharacterLoaded","FindCharacter","initialValues","validate","errors","onSubmit","isSubmitting","MainPage","selectedChar","decoration","comic","SingleComicPage","comicId","setComic","updateComic","onComicLoaded","CharacterPage","App","element","SingleComic","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.40205bd9.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                    end \n                    style={({isActive}) => ({color: isActive ? '#9F0013' : 'inherit'})}\n                    to=\"/\">Characters</NavLink></li>\n                    <li><NavLink \n                    style={({isActive}) => ({color: isActive ? '#9F0013' : 'inherit'})}\n                    to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: '0 auto'}} src={img}  alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import ErrorMessage from \"../errorMessage/ErrorMessage\"\nimport { Link } from \"react-router-dom\"\n\nconst Page404 = () => {\n    return (\n        <div>\n            <ErrorMessage/>\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page not found</p>\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}} to='/'> Back to main page</Link>\n        </div>\n    )\n}\n\nexport default Page404;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './comicsBanner.scss';\nimport Avengers from '../../resources/img/Avengers.png';\nimport AvengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst ComicsBanner = () => {\n    return (\n        <div className='comicsbanner'>\n            <img src={Avengers} alt=\"Avengers\" />\n            <p className=\"comicsbanner__title\">New comics every week! <br />Stay tuned!</p>\n            <img src={AvengersLogo} alt=\"AvengersLogo\" />\n        </div>\n    )\n}\n\nexport default ComicsBanner;","import { useHttp } from \"../hooks/http.hook\";\n\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=252b920e236e626d5077ce0c8bc0f8c3';\n    const _baseOffset = 210;\n\n\n\n    const getAllCharacters = async(offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n    const getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const getAllComics = async(offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComics = async(id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items ? char.comics.items : 'There is no comics for this character',\n        }\n    }\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComics, getCharacterByName}\n}\n\nexport default useMarvelService;\n"," import { useState, useCallback } from \"react\";\n\n export const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application-json'}) => {\n        \n        setLoading(true);\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`)\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\n    }, []);\n\n    const clearError = useCallback(() => setError(null), []);\n    \n    return{loading, request, error, clearError}\n\n }\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(false);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <CSSTransition\n                    timeout={200} \n                    classNames=\"comic\"\n                    key={item.id}>\n                    <li className='comics__item' key={item.id}>\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                            <div className='comics__item-name'>{item.title}</div>\n                            <div className='comics__item-name'>{item.price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        })\n        return (\n            <ul className='comics__grid' >\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\nimport ComicsBanner from \"../comicsBanner/comicsBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                    />\n                <title>Comics Page</title>\n            </Helmet>\n            <ComicsBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n \n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ?  <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage} \n            {spinner} \n            {content} \n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\n\nconst View = ({char}) => {\n    const {name, desciption, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {desciption}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n        </div>\n    )\n}\n\n\nexport default RandomChar;","import Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst CharList = (props) =>  {\n\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(1546);\n    const [charEnded, setCharEnded] = useState(false);\n\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset + 9);\n        setCharEnded(ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit': 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit': 'unset'};\n            }\n\n            return (\n                <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n                    <li ref={elem => itemRefs.current[i] = elem}\n                        className=\"char__item\"\n                        key={item.id}\n                        onClick={() => {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                props.onCharSelected(item.id);\n                                focusOnItem(i);\n                            }\n                        }}>\n                            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                            <div className=\"char__name\">{item.name}</div>\n                    </li>\n                </CSSTransition>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n                \n            </ul>\n        )\n    } \n\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charInfo.scss';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst CharInfo = (props) =>  {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        } \n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    \n\n    const skeleton = char || loading || error ? null : <Skeleton/>; \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error ||  !char) ?  <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n            <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n            {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return(\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorMessage />\n            )\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './characterInfo.scss';\n\nfunction CharacterInfo () {\n\n    const {id} = useParams();\n    const [character, setCharacter] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateCharacter();\n    }, [id]);\n\n    const updateCharacter = () => {\n        clearError();\n        getCharacter(id)\n            .then(onCharacterLoaded);\n    }\n\n    const onCharacterLoaded = (character) => {\n        setCharacter(character);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error ||  !character) ?  <View character={character}/> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n\n    )\n}\n\nconst View = ({character}) => {\n\n    const {name, description, thumbnail} = character;\n\n    return (\n        <div className=\"character-info\">\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content={`Page about ${name}`}\n                    />\n                <title>{name}</title>\n            </Helmet>\n            <img src={thumbnail} alt={name} className=\"character-info__img\"/>\n            <div className=\"character-info__text\">\n                <h2 className=\"character-info__name\">{name}</h2>\n                <p className=\"character-info__descr\">{description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default CharacterInfo;\n\n\n","import './findCharacter.scss'\nimport './../../style/button.scss'\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\nimport useMarvelService from '../../services/MarvelService';\nimport CharacterInfo from '../CharacterPage/CharacterInfo';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { useState } from 'react';\n\n\n\nfunction FindCharacter() {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = (name) => {\n        clearError();\n\n        getCharacterByName(name)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <div className='character__error-crit'><ErrorMessage/></div> : null;\n    const results = !char ? null : char.length > 0 ?\n        <div className=\"character__page\">\n            <div className=\"character__succes\">There is! Visit {char[0].name} page!</div>\n            <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n                <div className=\"inner\">To page</div>\n            </Link>\n        </div> :\n        <div className=\"character__error\">\n            The character was not found. Check the name try again\n        </div>\n\n\n    return (\n        <div className=\"character\">\n            <h3>Or find a character by name:</h3>\n            <Formik\n                initialValues={{ name: ''}}\n                validate={values => {\n                    const errors = {};\n                    if (!values.name) {\n                    errors.name = 'This field is required';\n                    } \n                    return errors;\n                }}\n                onSubmit={({ name }) => {\n                    updateChar(name);\n                    }}\n                className=\"character__input\">\n                {({ isSubmitting }) => (\n                <Form >\n                <Field \n                    type=\"text\" \n                    name=\"name\"/>\n                 <button \n                    type='submit' \n                    className=\"button button__main\"\n                    disabled={loading}>\n                    <div className=\"inner\">find</div>\n                </button>\n                <FormikErrorMessage name=\"name\" component=\"div\" className='character__error'/>\n                </Form>\n        )}\n            </Formik>\n            {results}\n            {errorMessage}\n        </div>\n    )\n}\n\nexport default FindCharacter;","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport decoration from '../../resources/img/vision.png';\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport FindCharacter from \"../findCharacter/FindCharacter\";\n\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState('');\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    } \n\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Marvel information portal\"\n                    />\n                <title>Marvel information </title>\n            </Helmet>\n            <ErrorBoundary>\n                    <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <div>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar} />\n                    </ErrorBoundary> \n                    <ErrorBoundary>\n                        <FindCharacter />\n                    </ErrorBoundary>\n                </div>              \n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n    const {loading, error, getComics, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateComic();\n    }, [comicId])\n\n    const updateComic = () => {\n        clearError();\n        getComics(comicId)\n            .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error ||  !comic) ?  <View comic={comic}/> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nconst View = ({comic}) => {\n\n    const {title, description, pageCount, thumbnail, language, price} = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content={`${title} comics book`}\n                    />\n                <title>{title}</title>\n            </Helmet>\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;","import ComicsBanner from \"../comicsBanner/comicsBanner\"\nimport CharacterInfo from \"../CharacterPage/CharacterInfo\";\n\nfunction CharacterPage() {\n\n    return (\n        <>\n        <ComicsBanner/>\n        <CharacterInfo/>\n        </>\n    )\n}\n\nexport default CharacterPage;","import { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport Page404 from \"../pages/404\";\nimport ComicsPage from \"../pages/ComicsPage\";\nimport MainPage from \"../pages/MainPage\";\nimport SingleComicPage from \"../pages/SingleComic\";\nimport CharacterPage from \"../pages/CharacterPage\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport app from './app.scss'\n\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <TransitionGroup component={null}>\n                            <CSSTransition \n                            timeout={200} \n                            classNames=\"fade\">\n                    <Routes>\n                        \n                                <Route path=\"/\" element={<MainPage/>}/>\n                            <Route path=\"/comics\" element={<ComicsPage/>}/>\n                            <Route path=\"/comics/:comicId\" element={<SingleComicPage/>} />\n                            <Route path=\"/*\" element={<Page404/>}/>\n                            <Route path=\"/characters/:id\" element={<CharacterPage/>}/>\n                        \n                        \n                    </Routes>\n                    </CSSTransition>\n                    </TransitionGroup>\n                </main>\n            </div>\n        </Router>\n    )\n\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM\n  .createRoot(document.getElementById('root'))\n  .render(\n        <App />\n  );\n\n\n"],"sourceRoot":""}